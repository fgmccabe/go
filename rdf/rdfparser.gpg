/*
 * A parser for N3.
 */

%{

 import n3lex.

 yyType ::= N(integer) | F(float) | D(float) | 
 	L(string) | V(string) | 
	PATH(list[yyType]) | props(list[(yyType,yyType)]) |
	FORMS(list[yyType]) |
	TRIPLE(yyType,yyType,yyType) | EXISTENTIAL(yyType) | UNIVERSAL(yyType) |
	SEQ(yyType,yyType) | PFX(yyType,yyType).

%}

%token INT%{integer%} FLT%{float%} DEC%{float%} BARENAME%{string%} 
%token URI%{string%} QNAME%{string,string%} 
%token PREFIX A IS HAS OF LANG%{string%} ID%{string%} HAT EQUAL LESSEQ GREATERQ
%token EOF DOT COMMA SEMI LPAR RPAR LSQ RSQ LBRC RBRC

%start n3

%%

 n3: statements ;

 statements : statements DOT statement { SEQ($1,$3) }
 | statement DOT
 |
 ;

 statement : declaration | existential | simpleStatement | universal ;

 declaration : PREFIX prefix explicituri { PFX($2,$3) };

 
