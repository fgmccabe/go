-- A Test golex file

-- The preamble ...

import go.stdparse.

yyTokType ::= INT(integer) | FLT(float) | ID(string) | EOF.

%%

-- The rules ...

 [ \n\t\b\r]+ => skip     	-- ignore white space

 "--"[^\n]*"\n"		       	-- line comment

 "-"?[0-9]+ => (INT(integerOf%%yyTok))

 "-"?[0-9]+("."[0-9]+([eE][-+]?[0-9]+)?) => (FLT(floatOf%%yyTok))

 [a-zA-Z_][a-zA-Z_0-9]* => (ID(yyTok))

-- We try out the states here 
 "/*" => <comment>        	-- long comment

  <comment> "*/" => <initial>
  <comment> .	         	-- implies a skip

%%

-- The postamble

  main([])::stdin.eof() -> {}.
  main([]) ->
      yyTokenizeAll(stdin.inLine("\n"));
    main([]).
    
  main(L) ->
	(S in L *>
	   f = openInFile(S,unknownEncoding);
	   Text = f.inText("");
	   f.close();
	   parseAll(yytest(Text,0,0))).
	