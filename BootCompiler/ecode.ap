/* Automatically generated, do not edit */
module
{
  escCode(X) => { case X in {     -- return escape and arity
     "exit" => (0,1)		-- terminate go engine
    |"__command_line" => (1,1)		-- command line arguments
    |"__command_opts" => (3,1)		-- command line options
    |"=" => (4,2)		-- unification
    |"==" => (5,2)		-- test for identicality
    |".=" => (6,2)		-- matching
    |"var" => (7,1)		-- test for variable
    |"nonvar" => (8,1)		-- test for non-variable
    |"__errorcode" => (10,2)		-- decode error symbol
    |"__call" => (11,4)		-- dynamic call
    |"__defined" => (12,3)		-- test for defined name
    |"+" => (13,3)		-- add two numbers
    |"-" => (14,3)		-- subtract two numbers
    |"*" => (15,3)		-- multiply two numbers
    |"/" => (16,3)		-- divide two numbers
    |"iplus" => (17,4)		-- modulo addition
    |"iminus" => (18,4)		-- modulo subtraction
    |"itimes" => (19,4)		-- modulo multiplication
    |"idiv" => (20,4)		-- modulo division
    |"imod" => (21,3)		-- modulo remainder
    |"quot" => (22,3)		-- integer quotient
    |"rem" => (23,3)		-- remainder
    |"abs" => (24,2)		-- absolute value
    |"**" => (25,3)		-- raise X to the power Y
    |"sqrt" => (26,2)		-- square root
    |"exp" => (27,2)		-- exponential
    |"log" => (28,2)		-- logarithm
    |"log10" => (29,2)		-- 10-based logarithm
    |"pi" => (30,1)		-- return PI
    |"sin" => (31,2)		-- sine
    |"cos" => (32,2)		-- cosine
    |"tan" => (33,2)		-- tangent
    |"asin" => (34,2)		-- arc sine
    |"acos" => (35,2)		-- arc cosine
    |"atan" => (36,2)		-- arc tangent
    |"srand" => (37,1)		-- set random seed
    |"rand" => (38,2)		-- random # generator
    |"irand" => (39,2)		-- generate random integer
    |"ldexp" => (40,3)		-- raise x to 2**y
    |"frexp" => (41,3)		-- split x into mant and exp
    |"modf" => (42,3)		-- split x into int and frac
    |"band" => (43,3)		-- bitwise and two numbers
    |"bor" => (44,3)		-- bitwise or two numbers
    |"bxor" => (45,3)		-- bitwise xor two numbers
    |"bleft" => (46,3)		-- bitwise left shift
    |"bright" => (47,3)		-- bitwise right shift
    |"bnot" => (48,2)		-- bitwise negate number
    |"trunc" => (49,2)		-- truncate to nearest integer
    |"floor" => (50,2)		-- truncate to lower integer
    |"ceil" => (51,2)		-- truncate to next integer
    |"itrunc" => (52,2)		-- truncate to 64 bit integer
    |"integral" => (53,1)		-- test if number is integral
    |"n2float" => (54,2)		-- float a number
    |"<" => (55,2)		-- compare terms
    |"=<" => (56,2)		-- compare terms
    |">" => (57,2)		-- compare terms
    |">=" => (58,2)		-- compare terms
    |"ground" => (59,1)		-- test for grounded
    |"__suspend" => (64,2)		-- suspend if variable not bound
    |"__assert" => (70,2)		-- assert a term
    |"__retract" => (71,1)		-- remove assertion
    |"__term" => (75,2)		-- define an assertion
    |"__is" => (76,2)		-- invoke an assertion
    |"__remove" => (77,1)		-- retract a definition
    |"__newObject" => (80,2)		-- create a new object
    |"__setProp" => (81,3)		-- set a property on a symbol
    |"__getProp" => (82,3)		-- get a symbol property
    |"__delProp" => (83,2)		-- delete a property from a symbol
    |"__univ" => (84,3)		-- weird function to construct terms
    |"__acquireLock" => (91,2)		-- acquire lock
    |"__waitLock" => (92,2)		-- release and wait on a lock
    |"__releaseLock" => (93,1)		-- release a lock
    |"__newhash" => (95,2)		-- create a new hash table
    |"__hashsearch" => (96,3)		-- search a hash table
    |"__hashinsert" => (97,4)		-- add to hash table
    |"__hashcount" => (98,2)		-- count elements of hash table
    |"__hashdelete" => (99,2)		-- delete element from hash table
    |"__hashcontents" => (100,2)		-- entire contents of hash table
    |"__hashkeys" => (101,2)		-- list of all keys in hash table
    |"__hashvalues" => (94,2)		-- entire contents of hash table
    |"__hashterm" => (103,2)		-- compute hash of term
    |"__sha1" => (102,2)		-- compute hash of a byte string
    |"__openURL" => (110,5)		-- open a URL
    |"__openInFile" => (111,3)		-- open input file
    |"__openOutFile" => (112,3)		-- open output file
    |"__openAppendFile" => (113,3)		-- open output file
    |"__openIOAppFile" => (114,3)		-- open output file
    |"__checkRoot" => (115,2)		-- check url against root URL
    |"__mergeURL" => (116,3)		-- merge URLs
    |"__createURL" => (117,5)		-- create a URL
    |"__popen" => (118,7)		-- open a pipe
    |"__close" => (119,1)		-- close file
    |"__eof" => (120,1)		-- end of file test
    |"__ready" => (121,1)		-- file ready test
    |"__inchars" => (122,3)		-- read block string
    |"__inbytes" => (123,3)		-- read block of bytes
    |"__inchar" => (124,2)		-- read single character
    |"__inbyte" => (125,2)		-- read single byte
    |"__inline" => (126,3)		-- read a line
    |"__intext" => (127,3)		-- read until matching character
    |"__outch" => (128,2)		-- write a single character
    |"__outbyte" => (129,2)		-- write a single byte
    |"__outtext" => (130,2)		-- write a string as a block
    |"__outsym" => (131,2)		-- write a symbol
    |"__stdfile" => (132,2)		-- standard file descriptor
    |"__fposition" => (135,2)		-- report current file position
    |"__fseek" => (136,2)		-- seek to new file position
    |"__flush" => (137,1)		-- flush the I/O buffer
    |"__flushall" => (138,0)		-- flush all files
    |"__setfileencoding" => (140,2)		-- set file encoding on file
    |"__ensure_loaded" => (141,4)		-- load class file
    |"__logmsg" => (142,1)		-- log a message in logfile
    |"__connect" => (143,5)		-- connect to remote host
    |"__listen" => (144,2)		-- listen on a port
    |"__accept" => (145,7)		-- accept connection
    |"hosttoip" => (150,2)		-- IP address of host
    |"iptohost" => (151,2)		-- host name from IP
    |"__cwd" => (152,1)		-- return current working directory
    |"__cd" => (153,1)		-- change current working directory
    |"__rm" => (154,1)		-- remove file
    |"__mv" => (155,2)		-- rename file
    |"__mkdir" => (156,2)		-- create directory
    |"__rmdir" => (157,1)		-- delete directory
    |"__chmod" => (158,2)		-- change mode of a file or directory
    |"__ls" => (159,2)		-- report on contents of a directory
    |"__file_present" => (160,1)		-- test for file
    |"__file_mode" => (161,2)		-- report modes of a file
    |"__file_type" => (162,2)		-- report on the type of a file
    |"__file_size" => (163,2)		-- report on the size of a file
    |"__file_date" => (164,4)		-- report on file access time and modification times
    |"delay" => (170,1)		-- delay for period of time
    |"sleep" => (171,1)		-- sleep until a definite time
    |"now" => (172,1)		-- current time
    |"today" => (173,1)		-- time at midnight
    |"ticks" => (174,1)		-- used CPU time
    |"__time2date" => (175,10)		-- convert a time to a date
    |"__time2utc" => (176,10)		-- convert a time to UTC date
    |"__date2time" => (177,8)		-- convert a date to a time
    |"__utc2time" => (178,9)		-- convert a UTC date to a time
    |"__isCcChar" => (180,1)		-- is Other, control char
    |"__isCfChar" => (181,1)		-- is Other, format char
    |"__isCnChar" => (182,1)		-- is Other, unassigned char
    |"__isCoChar" => (183,1)		-- is Other, private char
    |"__isCsChar" => (184,1)		-- is Other, surrogate char
    |"__isLlChar" => (185,1)		-- is Letter, lowercase char
    |"__isLmChar" => (186,1)		-- is Letter, modifier char
    |"__isLoChar" => (187,1)		-- is Letter, other char
    |"__isLtChar" => (188,1)		-- is Letter, title char
    |"__isLuChar" => (189,1)		-- is Letter, uppercase char
    |"__isMcChar" => (190,1)		-- is Mark, spacing char
    |"__isMeChar" => (191,1)		-- is Mark, enclosing char
    |"__isMnChar" => (192,1)		-- is Mark, nonspacing char
    |"__isNdChar" => (193,1)		-- is Number, decimal digit
    |"__isNlChar" => (194,1)		-- is Number, letter char
    |"__isNoChar" => (195,1)		-- is Number, other char
    |"__isPcChar" => (196,1)		-- is Punctuation, connector
    |"__isPdChar" => (197,1)		-- is Punctuation, dash char
    |"__isPeChar" => (198,1)		-- is Punctuation, close char
    |"__isPfChar" => (199,1)		-- is Punctuation, final quote
    |"__isPiChar" => (200,1)		-- is Punctuation, initial quote
    |"__isPoChar" => (201,1)		-- is Punctuation, other char
    |"__isPsChar" => (202,1)		-- is Punctuation, open char
    |"__isScChar" => (203,1)		-- is Symbol, currency char
    |"__isSkChar" => (204,1)		-- is Symbol, modifier char
    |"__isSmChar" => (205,1)		-- is Symbol, math char
    |"__isSoChar" => (206,1)		-- is Symbol, other char
    |"__isZlChar" => (207,1)		-- is Separator, line char
    |"__isZpChar" => (208,1)		-- is Separator, para char
    |"__isZsChar" => (209,1)		-- is Separator, space char
    |"__isLetterChar" => (210,1)		-- is letter char
    |"__digitCode" => (211,2)		-- convert char to num
    |"__charOf" => (212,2)		-- convert num to char
    |"__charCode" => (213,2)		-- convert char to code
    |"__succChar" => (221,3)		-- next character along
    |"int2str" => (214,5)		-- format an integer as a string
    |"num2str" => (215,6)		-- format a number as a string
    |"__stringOf" => (216,4)		-- convert value to a string
    |"__trim" => (217,3)		-- trim a string to a width
    |"explode" => (218,2)		-- convert symbol to string
    |"implode" => (219,2)		-- convert string to symbol
    |"gensym" => (220,2)		-- generate a new symbol
    |"__str2utf8" => (223,2)		-- encode a string as a list of utf8 bytes
    |"__utf82str" => (224,2)		-- decode a list of utf8 bytes into a string
    |"getenv" => (230,3)		-- get an environment variable
    |"setenv" => (231,2)		-- set an environment variable
    |"envir" => (232,1)		-- return entire environment
    |"getlogin" => (233,1)		-- return user's login
    |"__fork" => (240,1)		-- fork new process
    |"__thread" => (241,1)		-- report thread of current process
    |"kill" => (242,1)		-- kill off a process
    |"thread_state" => (243,2)		-- state of process
    |"waitfor" => (244,1)		-- wait for other thread to terminate
    |"__assoc" => (246,2)		-- associate a goal with a var
    |"__shell" => (247,4)		-- Run a shell cmd
    |"__ins_debug" => (254,0)		-- set instruction-level
    |"__stackTrace" => (255,0)		-- Print a stack trace
    |"__nop" => (256,0)		-- Do nothing
    | _ => (-1,-1)              -- dummy for non-escapes
  }};                        -- end of escCode
} export escCode             -- end of generated module
